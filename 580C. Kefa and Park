//https://codeforces.com/problemset/problem/580/C

#include<bits/stdc++.h>
using namespace std;

#define endl '\n'
#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define fraction() cout.unsetf(ios::floatfield); cout.precision(10); cout.setf(ios::fixed,ios::floatfield);
#define MOD 1e9+7
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
typedef long long int ll;
typedef tree< ll, null_type, less_equal<ll>, rb_tree_tag, tree_order_statistics_node_update > ordered_set;
/// cout<<*X.find_by_order(1)<<endl; // finds the kth element
/// cout<<X.order_of_key(-5)<<endl;  // number of items in a set that are strictly smaller than our item


const int mx = 1e5+123;
bool vis[mx];
vector <int> adj[mx];
int catVer[mx];
int ans, m;

void dfs(int u, int sum){


    vis[u] =  1;

    if(catVer[u] == 1)sum++;
    else sum = 0;

    if(sum > m)return;

    if(u != 1 && adj[u].size() == 1)ans++;

    for(auto v : adj[u]){
        if(vis[v] == 0){
            dfs(v, sum);
        }
    }

    return;
}

int main()
{
    optimize();


    int n; cin>>n>>m;

    for(int i=1; i<=n; i++)cin>>catVer[i];

    for(int i = 1; i <= n-1; i++){

        int u, v; cin>>u>>v;
        adj[u].push_back ( v );
        adj[v].push_back ( u );
    }

    dfs(1, 0);

    cout<<ans<<endl;
    return 0;
}
